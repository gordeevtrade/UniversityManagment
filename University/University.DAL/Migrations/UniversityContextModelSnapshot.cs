// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using University.DAL;

#nullable disable

namespace University.DAL.Migrations
{
    [DbContext(typeof(UniversityContext))]
    partial class UniversityContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("University.DAL.Cours", b =>
                {
                    b.Property<int>("Course_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Course_ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Course_ID");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Course_ID = 1,
                            Description = "AAA",
                            Name = "Englis"
                        });
                });

            modelBuilder.Entity("University.DAL.Groups", b =>
                {
                    b.Property<int>("Group_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Group_ID"));

                    b.Property<int>("Course_ID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Group_ID");

                    b.HasIndex("Course_ID");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            Group_ID = 1,
                            Course_ID = 1,
                            Name = "Sr-001"
                        });
                });

            modelBuilder.Entity("University.DAL.Students", b =>
                {
                    b.Property<int>("Student_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Student_ID"));

                    b.Property<string>("First_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Group_ID")
                        .HasColumnType("int");

                    b.Property<string>("Last_Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Student_ID");

                    b.HasIndex("Group_ID");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Student_ID = 1,
                            First_Name = "Alex",
                            Group_ID = 1,
                            Last_Name = "Smith"
                        });
                });

            modelBuilder.Entity("University.DAL.Groups", b =>
                {
                    b.HasOne("University.DAL.Cours", "courses")
                        .WithMany()
                        .HasForeignKey("Course_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("courses");
                });

            modelBuilder.Entity("University.DAL.Students", b =>
                {
                    b.HasOne("University.DAL.Groups", "groups")
                        .WithMany()
                        .HasForeignKey("Group_ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("groups");
                });
#pragma warning restore 612, 618
        }
    }
}
